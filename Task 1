Task 1:
Step 1: First Install git : link given in the description 
Step 2: open cmd and paste this command : git clone https://github.com/insidesherpa/JPMC-tech-task-1-py3.git
Step 3: Download Python and install it : link given in the description
step 4: Open terminal and run this command to download the dateutil: pip install python-dateutil
step 5: again open terminal and type cd <the path where you downloaded the git files : nomally it gets downloadded in c/user/<your name>/ : pleases do check it>
step 6: now open terminal with administrative permision (shown in video)
step 7: in the administrative cmd type : python server3.py          if error is shown then type: python3 server3.py
step 8: open another normal cmd and type : python client3.py        if error is shown then type: python3 client3.py
steo 9: inorder to make changes in code download vs code (shown in video)
step 10: open client3 from the file you downloaded from git
step 11: select all and then backspace and copy paste the below code 

Code changes in client3 copy and paste it all :

################################################################################
#
#  Permission is hereby granted, free of charge, to any person obtaining a
#  copy of this software and associated documentation files (the "Software"),
#  to deal in the Software without restriction, including without limitation
#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
#  and/or sell copies of the Software, and to permit persons to whom the
#  Software is furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
#  DEALINGS IN THE SOFTWARE.
 
import urllib.request
import time
import json
import random
 
# Server API URLs
QUERY = "http://localhost:8080/query?id={}"
 
# 500 server request
N = 500
 
def getDataPoint(quote):
    """ Produce all of the needed values to generate a datapoint """
    """ ------------- Update this function ------------- """
    stock = quote['stock']
    bid_price = float(quote['top_bid']['price'])
    ask_price = float(quote['top_ask']['price'])
    price = (bid_price+ask_price)/2
    return stock, bid_price, ask_price, price
 
def getRatio(price_a, price_b):
    """ Get ratio of price_a and price_b """
    """ ------------- Update this function ------------- """
    if (price_b == 0 ):
        return
    """ Also create some unit tests for this function in client_test.py """
    return price_a/price_b
 
# Main
if __name__ == "__main__":
 
    # Query the price once every N seconds.
    for _ in range(N):
        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
        """ ----------- Update to get the ratio --------------- """
        prices={}
        for quote in quotes:
            stock, bid_price, ask_price, price = getDataPoint(quote)
            prices[stock]=price
            print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
        print ("Ratio %s" % (getRatio(prices['ABC'],prices['DEF'])))
        
################################################################################        
        
 Bonus Task: 
 
step 1: open client_test.py 
step 2: Select all and backspace and paste the full below code 

Code Changes in unit Test:

import unittest
from client3 import getDataPoint
 
class ClientTest(unittest.TestCase):
  def test_getDataPoint_calculatePrice(self):
    quotes = [
      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
    ]
    """ ------------ Add the assertion below ------------ """
    for quote in quotes:
      self =.assertEqual(getDataPoint(quote), (quote['stock'],quote['top_bid']['price'],quote['top_ask']['price'],(quote['top_bid']['price']+quote['top_ask']['price'])/2))
 
  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
    quotes = [
      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
    ]
    """ ------------ Add the assertion below ------------ """
    for quote in quotes:
      self =.assertEqual(getDataPoint(quote), (quote['stock'],quote['top_bid']['price'],quote['top_ask']['price'],(quote['top_bid']['price']+quote['top_ask']['price'])/2))
 
 
  """ ------------ Add more unit tests ------------ """
 
 
 
if __name__ == '__main__':
    unittest.main()
    
-------------------------------------------------------------------------------------------------------------    
Create A Patch file :
Step 1: Open cmd and change dir by cd <path where you downloaded the git files:
step 2: write the below code

git add -A
git config user.email "<your_email_address>"
git config user.name "<your_name>"
git commit -m "Create Patch File"
git format-patch -1 HEAD


